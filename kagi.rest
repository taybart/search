request "search" {
  url = "https://kagi.com/api/v0/search"
  headers = {
    "Authorization" = "Bot ${trim(read("~/.kagi/auth"))}"
  }
  query = {
    q = "${env("QUERY")}"
    limit = "${env("LIMIT")}"
  }
  post_hook = <<LUA
    local co = colors
    local cu = co.underlined

    -- query
    print(co.f(
      {co.green, co.bold.e, cu.e}, 
      ('-> %s\n'):format(os.getenv("QUERY"))))

    if rest.res.status ~= 200 then
      fail("bad response from kagi")
      print(inspect(rest.res.body))
      return
    end

    local body = json.decode(rest.res.body)

    if os.getenv("SHOW_BALANCE") == "true" then
      print(('%sapi balance: (%.2f)%s\n'):format(
        cu.red, body.meta.api_balance, co.reset))
    end

    for i, d in ipairs(body.data) do
      if d.t == 0 then
        local url = d.url or ''
        local title = d.title or d.url 
        local snippet = d.snippet:gsub("&#39;", "'"):gsub("&quot;", '"')

        print(('[%d] %s'):format(i, co.hyperlink(d.url, d.title, cu.blue)))
        print('\t'..snippet)
      end
    end
  LUA
}


request "fastgpt" {
  url = "https://kagi.com/api/v0/fastgpt"
  method = "POST"
  headers = {
    "Authorization" = "Bot ${trim(read("~/.kagi/auth"))}"
    "Content-Type" = "application/json"
  }
  body = {
    query: "${env("QUERY")}",
    cache: true
  }
  post_hook = <<LUA
    local co = colors
    local cu = co.underlined

    -- query
    print(co.f(
      {co.green, co.bold.e, cu.e}, 
      ('-> %s\n'):format(os.getenv("QUERY"))))

    if rest.res.status ~= 200 then
      fail("bad response from kagi")
      print(inspect(rest.res.body))
      return
    end
    local body = json.decode(rest.res.body)


    if os.getenv("SHOW_BALANCE") == "true" then
      print(('%sapi balance: (%.2f)%s\n'):format(
        cu.red, body.meta.api_balance, co.reset))
    end

    local output = body.data.output
    :gsub('【', '[')
    :gsub('】', ']')
    :gsub("%*%*(.-)%*%*", co.f(co.bold.e, '%1'))
    print(output..'\n')
    for i, ref in ipairs(body.data.references) do
      print(('[%d] %s'):format(i, co.hyperlink(ref.url, ref.title, cu.blue)))
    end
  LUA
}
